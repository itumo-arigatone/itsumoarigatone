// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Post {
  id         Int         @id @default(autoincrement())
  title      String
  content    String
  images     PostImage[]
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now())
}

model PostImage {
  id         Int      @id @default(autoincrement())
  key        String
  postId     Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  price       Int
  images      ProductImage[]
  description String
  slug        String         @unique
  baseLink    String?
  created_at  DateTime       @default(now())
  updated_at  DateTime       @default(now())

  categories Category[] @relation("CategoryProduct")
}

model ProductImage {
  id         Int      @id @default(autoincrement())
  key        String
  productId  Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  product    Product  @relation(fields: [productId], references: [id])
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[]         @relation("CategoryProduct") // 商品との多対多リレーション
  closure  CategoryClosure[] // クロージャーテーブルとのリレーション
}

model CategoryClosure {
  ancestorId   Int // 親カテゴリのID
  descendantId Int // 子カテゴリのID
  Category     Category? @relation(fields: [categoryId], references: [id])
  categoryId   Int?

  @@id([ancestorId, descendantId]) // 親子のペアを一意に識別
}
